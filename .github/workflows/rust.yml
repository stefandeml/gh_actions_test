name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7]
    # runs-on: windows-latest
    # runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2020-04-09
        override: true
    - name: "Show rustc version"
      run: rustc --version
    - run: pip install maturin
    - name: Build artifact
      run: maturin build --release 
        --manifest-path ../Cargo.toml 
        --cargo-extra-args='--features python' 
        --interpreter python${{ matrix.python-version }} 
        --manylinux 2010 
        --out pkg/
      working-directory: ./py
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_test_token }}
      run: |
        twine upload --repository testpypi pkg/* --verbose
      working-directory: ./py
